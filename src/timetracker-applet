#!/usr/bin/env python
# Copyright (C) 2010 Kenny Meyer <knny.myer@gmail.com>
# Copyright (C) 2008 Jimmy Do <jimmydo@users.sourceforge.net>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

from os import path
import gettext
import locale
import sys
import gtk
import mateapplet
from timetrackerapplet import config
from timetrackerapplet.controllers import GlobalController, TimeTrackerApplet, TimeTrackerService, TimeTrackerManagerService
from timetrackerapplet.core import AppletGConfWrapper, TimeTracker

from dbus.mainloop.glib import DBusGMainLoop
DBusGMainLoop(set_as_default=True)

DBUS_BUS_NAME = 'net.launchpad.timetrackerapplet.TimeTrackerApplet'
DBUS_OBJ_NAMESPACE = '/net/launchpad/timetrackerapplet/TimeTrackerApplet'

gettext.bindtextdomain(config.GETTEXT_PACKAGE, config.LOCALE_DIR)
gettext.bind_textdomain_codeset(config.GETTEXT_PACKAGE, 'UTF-8')
gettext.textdomain(config.GETTEXT_PACKAGE)
locale.bindtextdomain(config.GETTEXT_PACKAGE, config.LOCALE_DIR)
locale.bind_textdomain_codeset(config.GETTEXT_PACKAGE, 'UTF-8')
locale.textdomain(config.GETTEXT_PACKAGE)

global_controller = GlobalController()
time_tracker_manager_obj_path = path.join(DBUS_OBJ_NAMESPACE, 'TimeTrackerManager')
print 'Timer Manager D-Bus object path: %s' % time_tracker_manager_obj_path

time_tracker_manager = None
try:
    time_tracker_manager = TimeTrackerManagerService(DBUS_BUS_NAME, time_tracker_manager_obj_path)
except Exception, err:
    print 'ERROR: Could not start TimeTrackerManagerService. D-Bus support will not be available. Error message: %s' % err

def check_dependencies():
    # Check for optional dependencies
    try:
        import dbus # >= 0.80
    except ImportError, err:
        print 'Missing optional dependency: %s' % err

    # Check for required dependencies
    try:
        import gobject # >= 2.12
        import gtk # >= 2.10, includes pango
        import gtk.glade # >= 2.10
        import gconf # >= 2.18
        import gnome # >= 2.18, includes bonobo.ui
        #import gnomeapplet # >= 2.18, included in python-gnome2-desktop
        import pynotify # >= 0.1.1
    except ImportError, err:
        dialog = gtk.MessageDialog(type=gtk.MESSAGE_ERROR,
                                    buttons=gtk.BUTTONS_CLOSE,
                                    message_format='%s\n\nPlease install required dependencies.' % err)
        dialog.run()
        dialog.destroy()
        sys.exit(1)

def get_time_tracker_id(gconf_wrapper):
    path_components = gconf_wrapper.get_base_path().split('/')

    # Use the second component from the end, which should usually be 'applet_*',
    # where '*' is some integer assigned by the system.
    # It could also be 'timetracker-applet' if we're running in standalone mode.
    # D-Bus doesn't like hyphens in object paths, so we have to replace them
    # with underscores.
    return path_components[-2].replace('-', '_')

def applet_factory(applet, iid):
    check_dependencies()

    time_tracker = TimeTracker()
    gconf_wrapper = AppletGConfWrapper(applet,
                                       '/schemas/apps/timetracker-applet/prefs',
                                       '/apps/timetracker-applet/prefs')
    time_tracker_id = get_time_tracker_id(gconf_wrapper)
    print 'Timer ID: %s' % time_tracker_id

    if time_tracker_manager is not None:
        time_tracker_manager.register_time_tracker_id(time_tracker_id)
        applet.connect('destroy', lambda sender: time_tracker_manager.unregister_time_tracker_id(time_tracker_id))

    TimeTrackerApplet(global_controller.get_presets_store(),
                global_controller.get_manage_presets_dialog(),
                applet,
                time_tracker,
                gconf_wrapper)

    time_tracker_obj_path = path.join(DBUS_OBJ_NAMESPACE, 'Time Trackers', time_tracker_id)
    print 'Time Tracker D-Bus object path: %s' % time_tracker_obj_path
    
    try:
        TimeTrackerService(DBUS_BUS_NAME, time_tracker_obj_path, time_tracker)
    except Exception, err:
        print 'ERROR: Could not start TimeTrackerService. D-Bus support will not be available. Error message: %s' % err
    
    return True

if __name__ == '__main__':
    windowed_mode = (len(sys.argv) > 1 and sys.argv[1] == '-w')

    if windowed_mode:
        win = gtk.Window()
        win.set_title('Time Tracker Applet')
        applet = mateapplet.Applet()
        applet_factory(applet, None)
        applet.reparent(win)
        
        applet.connect('destroy', gtk.main_quit)
        win.show()
        
        gtk.main()
    else:
        mateapplet.bonobo_factory(
            'OAFIID:TimeTrackerApplet_Factory',
            gnomeapplet.Applet.__gtype__,
            config.PACKAGE,
            config.VERSION,
            applet_factory)
